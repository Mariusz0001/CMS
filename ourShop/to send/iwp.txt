-- FUNCTION: public.get_productslist(text, integer)

 DROP FUNCTION public.get_productslist(text, integer);

CREATE OR REPLACE FUNCTION public.get_productslist(
	_productcategory text,
	_userid integer DEFAULT NULL::integer)
    RETURNS TABLE("Id" integer, idcategoriesbook integer, idproductsstatusbook integer, idtaxpercentagesbook integer, categoryname text, statusname text, taxvalue integer, "Name" text, barcode text, price double precision, qty integer, description text, PicturePath text) 
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
    ROWS 1000

AS $BODY$
BEGIN

	CREATE TEMP TABLE tmp(
		"Id" INTEGER,
		"IdParent" INTEGER
	);
	
	INSERT INTO tmp 
		("Id", "IdParent")
	WITH RECURSIVE cte AS (
		SELECT   x."Id"
				,x."IdCategoriesBook_Parent"
		FROM public."CategoriesBook" x
		WHERE x."Enabled" = TRUE
			  AND (_productCategory IS NULL OR LOWER(x."Name") = LOWER(_productCategory))

		UNION ALL

		 SELECT   t."Id"
				,t."IdCategoriesBook_Parent"
		FROM public."CategoriesBook" t
		   INNER JOIN cte c
		   ON t."IdCategoriesBook_Parent" = c."Id"
	)
	SELECT cte."Id",
		   cte."IdCategoriesBook_Parent"
	FROM cte;
	
	RETURN QUERY	
	  	    SELECT p."Id",
				   p."IdCategoriesBook",
				   p."IdProductsStatusBook",
				   p."IdTaxPercentagesBook",
				   CB."Name"::text as CategoryName,
				   PSB."Name"::text as StatusName,
				   TPB."Value"::integer as TaxValue,
				   p."Name"::text,
				   p."Barcode"::text,
				   p."Price",
				   p."QTY",
				   p."Description"::text,
				   (SELECT PP."Path"
				   	FROM public."ProductsPicture" PP
				    WHERE PP."IdProduct" = P."Id"
				   		  AND PP."IsEnabled" = TRUE
				    ORDER BY PP."OrderNumber"
					LIMIT 1)::text as PicturePath
			FROM public."Products" P
			LEFT OUTER JOIN public."CategoriesBook" CB ON CB."Id" = p."IdCategoriesBook" 
			LEFT OUTER JOIN public."ProductsStatusBook" PSB ON PSB."Id" = p."IdProductsStatusBook" AND PSB."Name" = 'Exposed'
			LEFT OUTER JOIN public."TaxPercentagesBook" TPB ON TPB."Id" = p."IdTaxPercentagesBook"
			WHERE p."IdCategoriesBook" IN ( SELECT tmp."Id"
										    FROM tmp)
				  AND p."Enabled" = TRUE
				  AND LENGTH(P."Name") > 0;
			
	
	DROP TABLE tmp;
	
	END;
$BODY$;

ALTER FUNCTION public.get_productslist(text, integer)
    OWNER TO postgres;

GRANT EXECUTE ON FUNCTION public.get_productslist(text, integer) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.get_productslist(text, integer) TO ourshopuser;

GRANT EXECUTE ON FUNCTION public.get_productslist(text, integer) TO postgres;






Celem projektu było zapoznanie się z bazami danych PostgreeSQL i użycie wraz z technologią ASP .NET.

Wykonano:
•	Formularz do dodawania produktów.
•	Moduł wyświetlający listę produktów.
•	Moduł do zarządzania produktami.
•	Strukturę uprawnień użytkowników.
•	Automatycznie generowane zakładki „Rims”, „Wheel covers” z bazy danych według kategorii i uprawnień użytkownika.
•	Logowanie.
•	Panel użytkownika.

Porównując PostgreeSQL do MicrosoftSQL pod względem użycia w .NET:
	PostgreeSQL	MicrosofSQL Express
License	Free and open source	SQL Server Express may only be used at no charge for development and testing, as well as for “micro workloads” such as mobile or web apps with minimal relational database requirements. The free license does not apply to instances running on virtual machines.
Entity Framework procedures and functions	Impossible to import stored procedures or functions by Entity	Possible to import stored procedures or functions by EntityFramework
Entity Framework installation	A lot of issues with install and connect EntityFramework	Simple and easy install EntityFramework
Entity Framework diagrams	Can’t create diagram of tables in EntityFramework
“The Entity Data Model Designer is unable to display the file you requested. You can edit the model using the XML Editor”	Created diagram with tables and relations in EntityFramework
Tools for DB management	pgAdmin opening in web browser and has limitation of queries in new window. Inconvinient interface.	Microsoft SQL Management Studio advanced tool and user friendly interface


 
