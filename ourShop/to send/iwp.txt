-- FUNCTION: public.get_isuserhaspermission(integer, character varying, boolean)

-- DROP FUNCTION public.get_isuserhaspermission(integer, character varying, boolean);

CREATE OR REPLACE FUNCTION public.get_isuserhaspermission(
	_userid integer,
	_permissionname character varying DEFAULT NULL::character varying,
	INOUT _ret boolean DEFAULT false)
    RETURNS boolean
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
BEGIN
      SELECT TRUE
	  INTO _ret
	  FROM public."UserPermission" UP
	  INNER JOIN public."PermissionBook" PB ON PB."IdPermissionBookGroup" = UP."IdPermissionBookGroup"
	  WHERE UP."IdUser"  = _userId
	  	    AND PB."Name" = _permissionName
	  LIMIT 1;
	  
	  IF _ret IS NULL THEN
	  	_ret := FALSE;
	  END IF;
END;
$BODY$;

ALTER FUNCTION public.get_isuserhaspermission(integer, character varying, boolean)
    OWNER TO postgres;

GRANT EXECUTE ON FUNCTION public.get_isuserhaspermission(integer, character varying, boolean) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.get_isuserhaspermission(integer, character varying, boolean) TO ourshopuser;

GRANT EXECUTE ON FUNCTION public.get_isuserhaspermission(integer, character varying, boolean) TO postgres;

